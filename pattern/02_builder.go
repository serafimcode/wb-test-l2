package pattern

/*Строитель позволяет упростить создание однотипных или связанных сущностей, инициализация которых состоит из
нескольких шагов. Допустим нам нужно создавать сущности одного вида, которые отличается несколькими характеристиками.
Решения в лоб:
1. Создать одну структуру, которая будет учитывать все возможные варианты. Тогда инициализация сущностей через эту структуру
будет очень громоздкой. У каждой сущности свой набор уникальных характеристик, а значит в общем конструкторе
у каждой сущности большая часть параметров будет передаваться как nil
2. Под каждую сущность создавать свою структуру, что будет засорять проект, а большую иерархию будет тяжело поддерживать.

Для решения этой проблемы можно инкапсулировать создание таких сущностей в служебные структуры "Строители". Клиентский код
будет работать с общим интерфейсом Строителя, а конкретные реализации интерфейса будут создавать конкретные сущности.
Таким образом конкретные строители будут взаимозаменяемы.
Так же можно выделить служебную структуру "Директор", которая определяет последовательность и набор шагов,
которые должен выполнить строитель для создания сущности.*/
